[package]
name = "all-is-cubes"
version = "0.5.0"
authors = ["Kevin Reid <kpreid@switchb.org>"]
edition = "2021"
rust-version = "1.65"
description = "Recursive voxel game engine. Can be used for voxel raytracing."
# TODO: add homepage = "..." when we have one
repository = "https://github.com/kpreid/all-is-cubes"
license = "MIT OR Apache-2.0"
# TODO: revisit categories once it's more settled how useful this is as a game engine
categories = ["games", "graphics", "rendering::engine"]


[lib]
# Disable running as benchmark so that the default doesn't interfere with Criterion usage.
bench = false

[dependencies]
arbitrary = { workspace = true, optional = true }
bitflags = { workspace = true }
bitvec = { version = "1.0.0", default-features = false, features = ["alloc"] }
cgmath = "0.18.0"
downcast-rs = "1.2.0"
embedded-graphics = "0.7.0"
exhaust = { workspace = true }
fnv = "1.0.7"
futures-core = { workspace = true }
# image is used for its common image data types (for HeadlessRenderer),
# and for PNG asset loading.
indoc = { workspace = true }
instant = { workspace = true }
log = { workspace = true }
mutants = { workspace = true }
num-traits = { workspace = true }
ordered-float = { workspace = true }
ouroboros = { workspace = true }
rand = { workspace = true }
rayon = { workspace = true, optional = true }
# std and rc features needed because we are [de]serializing `Arc`s
serde = { workspace = true, features = ["derive", "std", "rc"] }
thiserror = { workspace = true }
